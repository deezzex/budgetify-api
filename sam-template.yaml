# sam build --template sam-template.yaml
# sam deploy --s3-bucket=budgetify-artifacts --stack-name=budgetify-api-stack --parameter-overrides dbEndpoint=budgetify-dev.cyyklmgt4uyj.eu-west-2.rds.amazonaws.com , dbName=budgetifydb , dbUsername=root , dbPassword=budgetify-password

AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: AWS Serverless Lambda -- Budgetify API

Parameters:
  dbEndpoint:
    Type: String
  dbName:
    Type: String
  dbUsername:
    Type: String
  dbPassword:
    Type: String
  securityGroup:
    Type: String
    Default: sg-04c6545de21aa0d07
  subnetId1:
    Type: String
    Default: subnet-092b3d3547ee292e0
  subnetId2:
    Type: String
    Default: subnet-0c4cbf3e8032d5f28
  subnetId3:
    Type: String
    Default: subnet-05508397166affd81
  iamRole:
    Type: String
    Default: arn:aws:iam::262391914540:role/iam_for_lambda

Resources:
  BudgetifyAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: STAGE
      Cors:
        AllowHeaders: "'*'"
        AllowMethods: "'*'"
        AllowOrigin: "'*'"

  CreateUserLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: create-user-lambda
      Description: Microservice for creating users
      Handler: com.budgetify.Handler::handleRequest
      Runtime: java11
      MemorySize: 512
      Policies: AWSLambdaBasicExecutionRole
      Timeout: 30
      CodeUri: user-service/create-user-lambda
      Role: !Ref iamRole
      Environment:
        Variables:
          DB_ENDPOINT: !Ref dbEndpoint
          DB_NAME: !Ref dbName
          DB_USERNAME: !Ref dbUsername
          DB_PASSWORD: !Ref dbPassword
      VpcConfig:
        SecurityGroupIds:
          - !Ref securityGroup
        SubnetIds:
          - !Ref subnetId1
          - !Ref subnetId2
          - !Ref subnetId3
      Events:
        BudgetifyAPI:
          Type: Api
          Properties:
            Path: /api/users
            Method: POST
            RestApiId:
              Ref: BudgetifyAPI

  GetUserLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-user-lambda
      Description: Microservice for getting user details
      Handler: com.budgetify.Handler::handleRequest
      Runtime: java11
      MemorySize: 512
      Policies: AWSLambdaBasicExecutionRole
      Timeout: 30
      CodeUri: user-service/get-user-lambda
      Role: !Ref iamRole
      Environment:
        Variables:
          DB_ENDPOINT: !Ref dbEndpoint
          DB_NAME: !Ref dbName
          DB_USERNAME: !Ref dbUsername
          DB_PASSWORD: !Ref dbPassword
      VpcConfig:
        SecurityGroupIds:
          - !Ref securityGroup
        SubnetIds:
          - !Ref subnetId1
          - !Ref subnetId2
          - !Ref subnetId3
      Events:
        BudgetifyAPI:
          Type: Api
          Properties:
            Path: /api/users/{id}
            Method: GET
            RestApiId:
              Ref: BudgetifyAPI